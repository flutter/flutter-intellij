<!-- Do not edit; instead, modify plugin_template.xml, and run './bin/plugin generate'. -->

<idea-plugin>
  <id>io.flutter</id>
  <name>Flutter</name>
  <description>
    <![CDATA[
    <p>Support for developing Flutter applications. Flutter gives developers an easy and productive
    way to build and deploy cross-platform, high-performance mobile apps for both Android and iOS.
    Installing this plugin will also install the Dart plugin.</p>
    <br>
    <p>For some tools, this plugin uses Chromium through JxBrowser to display content from the web.
    JxBrowser complies with LGPL and offers an option to replace Chromium with another component.
    To do this:</p>
    <li>Find the JxBrowser files stored in the <a href="https://www.jetbrains.com/help/idea/tuning-the-ide.html?_ga=2.242942337.2083770720.1598541288-1470153005.1588544220#plugins-directory">plugins directory</a>, under /flutter-intellij/jxbrowser.</li>
    <li>The LGPL requirements are at <a href="https://teamdev.com/jxbrowser/lgpl-compliance/#source-code">from JxBrowser</a>, here you can also download the build script to relink with modified components.</li>
    ]]>
  </description>
  <!--suppress PluginXmlValidity -->
  <vendor url="https://google.com">Google</vendor>

  <category>Custom Languages</category>
  <version>SNAPSHOT</version>
  <idea-version since-build="243" until-build="243.*"/>

  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.xdebugger</depends>
  <depends>org.jetbrains.plugins.yaml</depends>
  <depends>org.jetbrains.android</depends>
  <depends>Dart</depends>
  <depends>Git4Idea</depends>

  <!-- plugin compatibility -->
  <!-- see: http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

  <!-- Contributes IDEA-specific features and implementations. -->
  <depends optional="true" config-file="idea-contribs.xml">com.intellij.modules.java</depends>
  <depends optional="true" config-file="flutter-coverage.xml">com.intellij.modules.coverage</depends>

  <!-- Contributes Gemini Code Assist extensions. -->
  <depends optional="true" config-file="gemini-contribs.xml">com.google.tools.ij.aiplugin</depends>

  <!-- Contributes Android Studio-specific features and implementations. -->
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="studio-contribs.xml">com.intellij.modules.androidstudio</depends>


  <change-notes>
    <![CDATA[
<h1>85</h1>
<ul>
  <li>Restored Test with coverage run configuration feature (#7810)</li>
  <li>Upgrade <code>org.jetbrains.intellij.platform</code> to 2.2.1 from 2.1.0 (#7936)</li>
  <li>Fix for DevTool windows not appearing (#8029)</li>
  <li>Support for Narwhal, Android Studio 2025.1 (#7963)</li>
  <li>Build changes to support newer required versions of Java to build the plugin (#7963)</li>
  <li>Cleanup: removal of pre Dart SDK 3.0 code (#7882)</li>
  <li>Cleanup: removal of the deprecated Swing-based Inspector window (#7861)</li>
  <li>Cleanup: removal of the deprecated Outline window (#7816)</li>
  <li>Cleanup: removal of the deprecated Performance page window (#7816)</li>
  <li>Migrated all instances of EditorNotifications.Provider to the new API (#7830)</li>
</ul>
<h1>84</h1>
<ul>
  <li>This version was not shipped due to issue #7968</li>
</ul>
<h1>83</h1>
<ul>
  <li>First version for Meerkat, Android Studio 2024.3 (#7799)</li>
  <li>Message in the Flutter Outline window that the window is now deprecated (#7778)</li>
  <li>Testing and cleanup now that the code is migrated to the new Gradle Plugin (#7670)</li>
</ul>
<h1>82.2</h1>
<ul>
  <li>Release of the plugin for 2024.3 (#7670)</li>
  <li>Migration to IntelliJ Platform Gradle Plugin (2.x) (#7670)</li>
  <li>The Flutter coverage runner support has been removed (#7670)</li>
</ul>
<h1>82.1</h1>
<ul>
  <li>Fix for Cannot invoke &quot;com.intellij.openapi.wm.ToolWindow.setAvailable(boolean)&quot; issue -- thanks to @parlough (#7691)</li>
  <li>New SDK notification to notify of old Flutter SDK usage (#7763)</li>
  <li>Progress on migrating off of old IDEA APIs (#7718)</li>
  <li>Significant code cleanup</li>
</ul>
<h1>82</h1>
<ul>
  <li>Various DevTools integration improvements (#7626) (#7621)</li>
  <li>Removal of the old Performance page, now replaced by DevTools (#7624)</li>
  <li>Add an option to reload a DevTools window (#7617)</li>
  <li>Fix to the developer build (#7625)</li>
</ul>
<h1>81.1</h1>
<ul>
  <li>Initial support 2024.2 &amp; Android Studio Ladybug Canary 6 (#7595)</li>
</ul>
<h1>81</h1>
<ul>
  <li>New icons to match &quot;New UI&quot; features in IntelliJ and Android Studio (#6595)</li>
  <li>Restore Flutter test icons in the editor gutter (#7505)</li>
  <li>Fix widget tree highlighting in the editor (#7522)</li>
  <li>Resolve &quot;Exception: Cannot invoke &quot;org..AnAction.getTemplatePresentation()&quot; exception (#7488)</li>
  <li>Resolve &quot;Pubspec has been edited&quot; editor notification is stuck (#7538)</li>
  <li>Resolve Released EditorImpl held by lambda in FlutterReloadManager (#7507)</li>
  <li>Configure the Project view for Flutter in AS, when creating a new Flutter project (#4470)</li>
  <li>Migrate to Kotlin UI DSL Version 2 (#7310)</li>
</ul>
<h1>80</h1>
<ul>
  <li>Resolve debugger issue with the new Dart macro file uri format (#7449)</li>
  <li>Hide deep links window when insufficient SDK version (#7478)</li>
  <li>Fix exceptions out of FlutterSampleNotificationProvider (#5634)</li>
  <li>Additional fixes for deprecation of <code>ActionUpdateThread.OLD_EDT</code> (#7330)</li>
  <li>Exception from EditorPerfDecorations fixed (#7432)</li>
  <li>Exception from FlutterColorProvider fixed (#7428)</li>
  <li>Fix top toolbar for new UI (#7423)</li>
  <li>Update JxBrowser to <code>v7.38.2</code> (#7413)</li>
  <li>&quot;Open Android Module in Android Studio&quot; action removed (#7103)</li>
  <li>Fix for deprecation of <code>ActionUpdateThread.OLD_EDT</code> (#7330)</li>
  <li>Deprecation of <code>ServiceExtensions.setPubRootDirectories</code> (#7142)</li>
  <li>Fix plugin not opening in Android Studio (#7305)</li>
  <li>Deadlock involving <code>WorkspaceCache.getInstance()</code> (#7333)</li>
  <li>Fix for <code>AlreadyDisposedException</code> from <code>DartVmServiceDebugProcess</code> (#7381)</li>
  <li>Memory leak fix out of <code>DartVmServiceDebugProcess</code> (7380)</li>
  <li>Memory leak fix in <code>FlutterSettings</code> and <code>JxBrowser</code> (#7377)</li>
  <li>Delete actions specific to legacy inspector (#7416)</li>
</ul>
]]>
  </change-notes>

  <!-- Everything following should be SmallIDE-friendly.-->
  <!-- See: http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

  <actions>
    <group id="Flutter.MainToolbarActions">
      <action id="Flutter.DeviceSelector" class="io.flutter.actions.DeviceSelectorAction"
              description="Flutter Device Selection"
              icon="FlutterIcons.Phone"/>
      <action id="Flutter.DeviceSelectorRefresher" class="io.flutter.actions.DeviceSelectorRefresherAction"
              text="Refresh Device List"
              description="Refresh device list" />
      <add-to-group anchor="before" group-id="RunToolbarMainActionGroup" relative-to-action="RedesignedRunConfigurationSelector"/>
    </group>

    <!--    This is to keep device selector in old UI -->
    <group id="Flutter.MainToolbarActionsLegacy">
      <action id="Flutter.DeviceSelectorLegacy" class="io.flutter.actions.DeviceSelectorAction"
              description="Flutter Device Selection"
              icon="FlutterIcons.Phone"/>
      <action id="Flutter.DeviceSelectorRefresherLegacy" class="io.flutter.actions.DeviceSelectorRefresherAction"
              text="Refresh Device List"
              description="Refresh device list" />
      <add-to-group anchor="before" group-id="ToolbarRunGroup" relative-to-action="RunConfiguration"/>
    </group>

    <group id="FlutterToolsActionGroup" class="io.flutter.actions.FlutterToolsActionGroup" popup="true"
           text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
      <action id="flutter.gettingStarted" class="io.flutter.actions.FlutterGettingStartedAction"
              text="Getting Started"
              description="View the online getting started documentation"/>
      <separator/>
      <action id="flutter.upgrade" class="io.flutter.actions.FlutterUpgradeAction"
              text="Flutter Upgrade"
              description="Run 'flutter upgrade'"/>
      <action id="flutter.doctor" class="io.flutter.actions.FlutterDoctorAction"
              text="Flutter Doctor"
              description="Run 'flutter doctor'"/>
      <separator/>
      <action id="flutter.pub.add" class="io.flutter.actions.FlutterPackagesAddAction"
              text="Flutter Pub Add"
              description="Run 'flutter pub add'"/>
      <action id="flutter.pub.get" class="io.flutter.actions.FlutterPackagesGetAction"
              text="Flutter Pub Get"
              description="Run 'flutter pub get'"/>
      <action id="flutter.pub.upgrade" class="io.flutter.actions.FlutterPackagesUpgradeAction"
              text="Flutter Pub Upgrade"
              description="Run 'flutter pub upgrade'"/>
      <separator/>
      <action id="flutter.clean" class="io.flutter.actions.FlutterCleanAction"
              text="Flutter Clean"
              description="Run 'flutter clean'"/>
      <separator/>
      <action id="flutter.devtools.open" class="io.flutter.run.OpenDevToolsAction"
              text="Open Flutter DevTools in Browser"
              description="Open Flutter DevTools in Browser"/>
      <separator/>
<!--      <action id="flutter.androidstudio.open" class="io.flutter.actions.OpenInAndroidStudioAction"-->
<!--              text="Open Android module in Android Studio"-->
<!--              description="Launch Android Studio to edit the Android module as a top-level project"/>-->
      <action id="flutter.xcode.open" class="io.flutter.actions.OpenInXcodeAction"
              text="Open iOS/macOS module in Xcode"
              description="Launch Xcode to edit the iOS module as a top-level project"/>
      <action id="flutter.appcode.open" class="io.flutter.actions.OpenInAppCodeAction"
              text="Open iOS module in AppCode"
              description="Launch AppCode to edit the iOS module as a top-level project"/>
      <separator/>
      <action id="flutter.submitFeedback" class="io.flutter.actions.FlutterSubmitFeedback"
              text="Submit Feedback..."
              description="Provide feedback for the Flutter plugin"/>
    </group>

    <!-- project explorer actions -->
    <group id="FlutterPackagesExplorerActionGroup" class="io.flutter.actions.FlutterPackagesExplorerActionGroup">
      <separator/>
      <group text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter" popup="true">
        <separator/>
        <reference ref="flutter.pub.get"/>
        <reference ref="flutter.pub.upgrade"/>
        <separator/>
<!--        <reference ref="flutter.androidstudio.open"/>-->
        <reference ref="flutter.xcode.open"/>
        <reference ref="flutter.appcode.open"/>
        <separator/>
        <reference ref="flutter.upgrade"/>
        <reference ref="flutter.doctor"/>
      </group>
      <separator/>
      <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="AddToFavorites" anchor="before"/>
    </group>
<!--    See comment at the top of FlutterExternalIdeActionGroup.-->
<!--    <group id="FlutterExternalIdeActionGroup" class="io.flutter.actions.FlutterExternalIdeActionGroup">-->
<!--      <separator/>-->
<!--      <group text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter" popup="true">-->
<!--        <reference ref="flutter.androidstudio.open"/>-->
<!--        <reference ref="flutter.xcode.open"/>-->
<!--        <reference ref="flutter.appcode.open"/>-->
<!--      </group>-->
<!--      <separator/>-->
<!--      <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="AddToFavorites" anchor="before"/>-->
<!--    </group>-->
    <group id="FlutterBuildActionGroup" class="io.flutter.actions.FlutterBuildActionGroup">
      <separator/>
      <group text="Flutter" popup="true">
        <action id="flutter.build.aar" text="Build AAR" description="Building a Flutter module for Android add-to-app"
                class="io.flutter.actions.FlutterBuildActionGroup$AAR"/>
        <action id="flutter.build.apk" text="Build APK" description="Building a Flutter app for general distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$APK"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="flutter.build.aab" text="Build App Bundle" description="Building a Flutter app for Google Play Store distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$AppBundle"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="flutter.build.ios" text="Build iOS" description="Building a Flutter app for Apple App Store distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$Ios"/>
        <action id="flutter.build.web" text="Build Web" description="Building a Flutter app for web"
                class="io.flutter.actions.FlutterBuildActionGroup$Web"/>
      </group>
      <add-to-group group-id="BuildMenu" anchor="first"/>
    </group>

    <!-- main toolbar run actions -->
    <group>
      <action id="AttachDebuggerAction"
              class="io.flutter.actions.AttachDebuggerAction"
              text="Flutter Attach"
              description="Attach debugger to a Flutter process embedded in an Android app"
              icon="FlutterIcons.AttachDebugger">
        <add-to-group group-id="ToolbarRunGroup" anchor="after" relative-to-action="RunnerActions"/>
      </action>
      <action id="Flutter.Toolbar.ReloadAction" class="io.flutter.actions.ReloadFlutterAppRetarget"
              description="Reload"
              icon="FlutterIcons.HotReload">
        <add-to-group group-id="ToolbarRunGroup" anchor="after" relative-to-action="RunnerActions"/>
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl BACK_SLASH"/>
      </action>
      <add-to-group anchor="before" group-id="MainToolbarRight" relative-to-action="RedesignedRunConfigurationSelector"/>
    </group>

    <!-- run menu actions -->
    <group id="Flutter.MenuActions.Run">
      <separator/>
      <reference ref="Flutter.Toolbar.ReloadAction"/>
      <action id="Flutter.Toolbar.RestartAction" class="io.flutter.actions.RestartFlutterAppRetarget"
              description="Restart"
              icon="FlutterIcons.HotRestart">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift BACK_SLASH"/>
      </action>
      <action id="Flutter.Toolbar.ReloadAllAction" class="io.flutter.actions.ReloadAllFlutterAppsRetarget"
              description="Reload All Devices"
              icon="FlutterIcons.HotReload">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt BACK_SLASH"/>
      </action>
      <action id="Flutter.Toolbar.RestartAllAction" class="io.flutter.actions.RestartAllFlutterAppsRetarget"
              description="Restart All Devices"
              icon="FlutterIcons.HotRestart">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift BACK_SLASH"/>
      </action>
      <separator/>
      <action id="Flutter.Menu.RunProfileAction" class="io.flutter.actions.RunProfileFlutterApp"
              description="Flutter Run Profile Mode"
              icon="AllIcons.Actions.Execute">
      </action>
      <action id="Flutter.Menu.RunReleaseAction" class="io.flutter.actions.RunReleaseFlutterApp"
              description="Flutter Run Release Mode"
              icon="AllIcons.Actions.Execute">
      </action>
      <reference ref="AttachDebuggerAction"/>
      <separator/>
      <add-to-group group-id="RunMenu" anchor="after" relative-to-action="Stop"/>
    </group>

    <!-- refactoring menu -->
    <action class="io.flutter.actions.ExtractWidgetAction" id="Flutter.ExtractWidget" text="Extract Flutter Widget...">
      <add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt W"/>
    </action>

    <!-- help menu -->
    <action class="io.flutter.actions.FlutterGettingStartedAction" id="Flutter.FlutterHelp" text="Flutter Plugin Help">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="HelpTopics"/>
    </action>

    <action id="io.flutter.RestartDaemon" class="io.flutter.actions.RestartFlutterDaemonAction"
            text="Restart Flutter Daemon" description="Restart Flutter Daemon" icon="FlutterIcons.Flutter">
    </action>

    <action id="io.flutter.OpenDevToolsAction" class="io.flutter.run.OpenDevToolsAction"
            text="Open Flutter DevTools in Browser" description="Open Flutter DevTools in Browser" icon="FlutterIcons.Dart_16">
    </action>

    <action id="io.flutter.RefreshToolWindow" class="io.flutter.actions.RefreshToolWindowAction" text="Refresh Tool Window"
            description="Refresh current tool window contents">
    </action>

  </actions>

  <extensionPoints>
    <extensionPoint name="gradleSyncProvider" interface="io.flutter.android.GradleSyncProvider"/>
    <extensionPoint name="colorPickerProvider" interface="io.flutter.editor.ColorPickerProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="io.flutter">
    <gradleSyncProvider implementation="io.flutter.android.IntellijGradleSyncProvider" order="last"/>
    <colorPickerProvider implementation="io.flutter.editor.IntellijColorPickerProvider" order="last"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <iconMapper mappingFile="FlutterIconMappings.json"/>
    <postStartupActivity implementation="io.flutter.ProjectOpenActivity"/>
    <postStartupActivity implementation="io.flutter.FlutterInitializer"/>
    <projectService serviceInterface="io.flutter.run.daemon.DeviceService"
                    serviceImplementation="io.flutter.run.daemon.DeviceService"/>
    <projectService serviceInterface="io.flutter.run.daemon.DevToolsService"
                    serviceImplementation="io.flutter.run.daemon.DevToolsService"/>
    <projectService serviceInterface="io.flutter.dart.FlutterDartAnalysisServer"
                    serviceImplementation="io.flutter.dart.FlutterDartAnalysisServer"/>
    <projectService serviceInterface="io.flutter.bazel.WorkspaceCache"
                    serviceImplementation="io.flutter.bazel.WorkspaceCache"/>
    <projectService serviceImplementation="io.flutter.pub.PubRootCache"/>

    <backgroundPostStartupActivity id="FontPreviewStartupActivity"
                                   implementation="io.flutter.font.FontPreviewStartupActivity"
                                   order="last"/>

    <configurationType implementation="io.flutter.run.FlutterRunConfigurationType"/>
    <runConfigurationProducer implementation="io.flutter.run.FlutterRunConfigurationProducer"/>
    <programRunner implementation="io.flutter.run.FlutterRunner"/>

    <configurationType implementation="io.flutter.run.test.FlutterTestConfigType"/>
    <runConfigurationProducer implementation="io.flutter.run.test.FlutterTestConfigProducer"/>
    <programRunner implementation="io.flutter.run.test.FlutterTestRunner"/>
    <runLineMarkerContributor language="Dart" implementationClass="io.flutter.run.test.FlutterTestLineMarkerContributor"/>

    <configurationType implementation="io.flutter.run.bazel.FlutterBazelRunConfigurationType"/>
    <programRunner implementation="io.flutter.run.bazel.BazelRunner"/>

    <configurationType implementation="io.flutter.run.bazelTest.FlutterBazelTestConfigurationType"/>
    <runConfigurationProducer implementation="io.flutter.run.bazelTest.BazelTestConfigProducer"/>
    <runConfigurationProducer implementation="io.flutter.run.bazelTest.BazelWatchTestConfigProducer"/>
    <programRunner implementation="io.flutter.run.bazelTest.BazelTestRunner"/>
    <runLineMarkerContributor language="Dart" implementationClass="io.flutter.run.bazelTest.FlutterBazelTestLineMarkerContributor"/>

    <defaultLiveTemplatesProvider implementation="io.flutter.template.FlutterLiveTemplatesProvider"/>
    <liveTemplateContext implementation="io.flutter.template.DartToplevelTemplateContextType"/>

    <!-- IDEA only -->
    <moduleBuilder builderClass="io.flutter.module.FlutterModuleBuilder"/>

    <projectService serviceImplementation="io.flutter.sdk.FlutterSdkManager"/>
    <projectService serviceImplementation="io.flutter.sdk.AndroidEmulatorManager"/>

    <applicationService serviceInterface="io.flutter.settings.FlutterSettings"
                        serviceImplementation="io.flutter.settings.FlutterSettings"
                        overrides="false"/>

    <applicationService serviceImplementation="io.flutter.jxbrowser.EmbeddedBrowserEngine" overrides="false" />
    <applicationService serviceImplementation="io.flutter.font.FontPreviewProcessor"/>
    <console.folding implementation="io.flutter.console.FlutterConsoleFolding" id="1"/>
    <console.folding implementation="io.flutter.console.FlutterConsoleExceptionFolding" order="after 1"/>
    <console.folding implementation="io.flutter.logging.FlutterConsoleLogFolding" order="last"/>

    <projectConfigurable groupId="language" instance="io.flutter.sdk.FlutterSettingsConfigurable"
                         id="flutter.settings" key="flutter.title" bundle="io.flutter.FlutterBundle" nonDefaultProject="true"/>
    <colorProvider implementation="io.flutter.editor.FlutterColorProvider"/>
    <codeInsight.lineMarkerProvider language="Dart" implementationClass="io.flutter.editor.FlutterIconLineMarkerProvider"/>
    <errorHandler implementation="io.flutter.FlutterErrorReportSubmitter"/>

    <toolWindow id="Flutter Inspector" anchor="right" icon="FlutterIcons.DevToolsInspector" factoryClass="io.flutter.view.FlutterViewFactory"/>
    <toolWindow id="Flutter Deep Links" anchor="right" icon="FlutterIcons.DevToolsDeepLinks" factoryClass="io.flutter.deeplinks.DeepLinksViewFactory" />
    <toolWindow id="Flutter DevTools" anchor="right" icon="FlutterIcons.DevTools" factoryClass="io.flutter.devtools.RemainingDevToolsViewFactory" />
    <toolWindow id="Flutter DevTools Extensions" anchor="right" icon="FlutterIcons.DevToolsExtensions" factoryClass="io.flutter.devtools.DevToolsExtensionsViewFactory" />
    <!-- Do not uncomment until ready to release the Property Editor. -->
    <!-- <toolWindow id="Flutter Property Editor" anchor="right" icon="FlutterIcons.PropertyEditor" factoryClass="io.flutter.propertyeditor.PropertyEditorViewFactory" /> -->

    <!-- Having the projectService defined after the toolWindows allows them to all be picked up by the platform -->
    <!-- See https://github.com/flutter/flutter-intellij/issues/8029 -->
    <projectService serviceImplementation="io.flutter.view.FlutterView" overrides="false"/>

    <projectOpenProcessor id="flutter" implementation="io.flutter.project.FlutterProjectOpenProcessor" order="first"/>

    <localInspection bundle="io.flutter.FlutterBundle" key="outdated.dependencies.inspection.name"
                     groupName="Flutter" enabledByDefault="true" level="WARNING" language="Dart"
                     implementationClass="io.flutter.inspections.FlutterDependencyInspection"/>

    <editorNotificationProvider implementation="io.flutter.editor.FlutterPubspecNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.inspections.SdkConfigurationNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.editor.NativeEditorNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.samples.FlutterSampleNotificationProvider"/>

    <projectService serviceInterface="io.flutter.run.FlutterReloadManager"
                    serviceImplementation="io.flutter.run.FlutterReloadManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.editor.FlutterSaveActionsManager"
                    serviceImplementation="io.flutter.editor.FlutterSaveActionsManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.run.FlutterAppManager"
                    serviceImplementation="io.flutter.run.FlutterAppManager"
                    overrides="false"/>

    <projectService serviceInterface="io.flutter.editor.ActiveEditorsOutlineService"
                    serviceImplementation="io.flutter.editor.ActiveEditorsOutlineService"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.inspector.InspectorGroupManagerService"
                    serviceImplementation="io.flutter.inspector.InspectorGroupManagerService"
                    overrides="false"/>

    <iconProvider implementation="io.flutter.project.FlutterIconProvider" order="first"/>

    <library.type implementation="io.flutter.sdk.FlutterPluginLibraryType"/>

    <projectStructureDetector implementation="io.flutter.project.FlutterProjectStructureDetector"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/FlutterLogColorSchemeDefault.xml"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/FlutterCodeColorSchemeDefault.xml"/>
    <search.optionContributor implementation="io.flutter.sdk.FlutterSearchableOptionContributor"/>
    <readerModeMatcher implementation="io.flutter.editor.FlutterReaderModeMatcher"/>

    <projectService serviceInterface="io.flutter.jxbrowser.EmbeddedJxBrowser"
                    serviceImplementation="io.flutter.jxbrowser.EmbeddedJxBrowser"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.view.EmbeddedJcefBrowser"
                    serviceImplementation="io.flutter.view.EmbeddedJcefBrowser"
                    overrides="false"/>
    <notificationGroup displayType="STICKY_BALLOON" id="deeplink"/>
    <notificationGroup displayType="TOOL_WINDOW" id="flutter-run" toolWindowId="Run" />
    <notificationGroup displayType="TOOL_WINDOW" id="flutter-debug" toolWindowId="Debug" />
    <notificationGroup displayType="TOOL_WINDOW" id="flutter-analysis" toolWindowId="Dart Analysis" />

    <registryKey defaultValue="" description="Launch local server for DevTools" key="flutter.local.devtools.dir"/>
    <registryKey defaultValue="" description="Local DevTools server arguments" key="flutter.local.devtools.args"/>
  </extensions>

  <!-- Dart Plugin extensions -->
  <extensions defaultExtensionNs="Dart">
    <completionExtension implementation="io.flutter.editor.FlutterCompletionContributor" order="last"/>
  </extensions>

</idea-plugin>
