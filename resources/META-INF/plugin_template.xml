<idea-plugin>
  <id>@PLUGINID@</id>
  <name>Flutter</name>
  <description>
    Support for developing Flutter applications. Flutter gives developers an easy and productive
    way to build and deploy cross-platform, high-performance mobile apps for both Android and iOS.
    Installing this plugin will also install the Dart plugin.
  </description>
  <!--suppress PluginXmlValidity -->
  <vendor url="https://github.com/flutter/flutter-intellij">flutter.dev</vendor>

  <category>Custom Languages</category>
  @VERSION@
  <idea-version since-build="@SINCE@" until-build="@UNTIL@"/>

  <depends>Dart</depends>

  <!-- plugin compatibility -->
  <!-- see: http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

  <!-- Contributes IDEA-specific features and implementations. -->
  <depends optional="true" config-file="idea-contribs.xml">com.intellij.modules.java</depends>

  <!-- Contributes Android Studio-specific features and implementations. -->
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="studio-contribs.xml">@DEPEND@</depends>

  <change-notes>
    <![CDATA[
@CHANGELOG@]]>
  </change-notes>

  <!-- Everything following should be SmallIDE-friendly.-->
  <!-- See: http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

  <actions>
    <group id="Flutter.InspectorActions">
      <action id="Flutter.JumpToTypeSource" class="io.flutter.inspector.JumpToTypeSourceAction"
              description="Jump to Type Source"
              text="Jump to Type Source">
        <keyboard-shortcut keymap="$default" first-keystroke="shift F4"/>
      </action>
      <action id="Flutter.JumpToSource" class="io.flutter.inspector.JumpToSourceAction"
              text="Jump to Source">
        <keyboard-shortcut keymap="$default" first-keystroke="control DOWN"/>
      </action>
    </group>

    <group id="Flutter.MainToolbarActions">
      <separator/>
      <action id="Flutter.DeviceSelector" class="io.flutter.actions.DeviceSelectorAction"
              description="Flutter Device Selection"
              icon="FlutterIcons.Phone"/>
      <separator/>
      <add-to-group anchor="before" group-id="RunContextGroup" relative-to-action="RunConfiguration"/>
      <add-to-group anchor="before" group-id="ToolbarRunGroup" relative-to-action="RunConfiguration"/>
    </group>

    <group id="FlutterToolsActionGroup" class="io.flutter.actions.FlutterToolsActionGroup" popup="true"
           text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
      <action id="flutter.gettingStarted" class="io.flutter.actions.FlutterGettingStartedAction"
              text="Getting Started"
              description="View the online getting started documentation"/>
      <separator/>
      <action id="flutter.upgrade" class="io.flutter.actions.FlutterUpgradeAction"
              text="Flutter Upgrade"
              description="Run 'flutter upgrade'"/>
      <action id="flutter.doctor" class="io.flutter.actions.FlutterDoctorAction"
              text="Flutter Doctor"
              description="Run 'flutter doctor'"/>
      <separator/>
      <action id="flutter.packages.get" class="io.flutter.actions.FlutterPackagesGetAction"
              text="Flutter Packages Get"
              description="Run 'flutter packages get'"/>
      <action id="flutter.packages.upgrade" class="io.flutter.actions.FlutterPackagesUpgradeAction"
              text="Flutter Packages Upgrade"
              description="Run 'flutter packages upgrade'"/>
      <separator/>
      <action id="flutter.clean" class="io.flutter.actions.FlutterCleanAction"
              text="Flutter Clean"
              description="Run 'flutter clean'"/>
      <separator/>
      <action id="flutter.devtools.open" class="io.flutter.run.OpenDevToolsAction"
              text="Open Dart DevTools"
              description="Open Dart DevTools"/>
      <separator/>
      <action id="flutter.androidstudio.open" class="io.flutter.actions.OpenInAndroidStudioAction"
              text="Open Android module in Android Studio"
              description="Launch Android Studio to edit the Android module as a top-level project"/>
      <action id="flutter.xcode.open" class="io.flutter.actions.OpenInXcodeAction"
              text="Open iOS module in Xcode"
              description="Launch Xcode to edit the iOS module as a top-level project"/>
      <action id="flutter.makeHostAppEditable" class="io.flutter.actions.FlutterMakeHostAppEditableAction"
              text="Make Host App Editable"
              description="Run 'flutter make-host-app-editable' to use in an Android app"/>
      <separator/>
      <action id="flutter.submitFeedback" class="io.flutter.actions.FlutterSubmitFeedback"
              text="Submit Feedback..."
              description="Provide feedback for the Flutter plugin"/>
    </group>

    <!-- project explorer actions -->
    <group id="FlutterPackagesExplorerActionGroup" class="io.flutter.actions.FlutterPackagesExplorerActionGroup">
      <separator/>
      <group text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter" popup="true">
        <separator/>
        <reference ref="flutter.packages.get"/>
        <reference ref="flutter.packages.upgrade"/>
        <separator/>
        <reference ref="flutter.androidstudio.open"/>
        <reference ref="flutter.xcode.open"/>
        <separator/>
        <reference ref="flutter.upgrade"/>
        <reference ref="flutter.doctor"/>
      </group>
      <separator/>
      <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="AddToFavorites" anchor="before"/>
    </group>
    <group id="FlutterExternalIdeActionGroup" class="io.flutter.actions.FlutterExternalIdeActionGroup">
      <separator/>
      <group text="Flutter" description="Flutter Tools" icon="FlutterIcons.Flutter" popup="true">
        <reference ref="flutter.androidstudio.open"/>
        <reference ref="flutter.xcode.open"/>
      </group>
      <separator/>
      <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="AddToFavorites" anchor="before"/>
    </group>
    <group id="FlutterBuildActionGroup" class="io.flutter.actions.FlutterBuildActionGroup">
      <separator/>
      <group text="Flutter" popup="true">
        <action id="flutter.build.aar" text="Build AAR" description="Building a Flutter module for Android add-to-app"
                class="io.flutter.actions.FlutterBuildActionGroup$AAR"/>
        <action id="flutter.build.apk" text="Build APK" description="Building a Flutter app for general distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$APK"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="flutter.build.aab" text="Build App Bundle" description="Building a Flutter app for Google Play Store distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$AppBundle"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="flutter.build.ios" text="Build iOS" description="Building a Flutter app for Apple App Store distribution"
                class="io.flutter.actions.FlutterBuildActionGroup$Ios"/>
      </group>
      <add-to-group group-id="BuildMenu" anchor="first"/>
    </group>

    <!-- main toolbar run actions -->
    <action id="AttachDebuggerAction"
            class="io.flutter.actions.AttachDebuggerAction"
            text="Flutter Attach"
            description="Attach debugger to a Flutter process embedded in an Android app"
            icon="FlutterIcons.AttachDebugger">
      <add-to-group group-id="ToolbarRunGroup" anchor="after" relative-to-action="RunnerActions"/>
    </action>
    <action id="Flutter.Toolbar.ReloadAction" class="io.flutter.actions.ReloadFlutterAppRetarget"
            description="Reload"
            icon="FlutterIcons.HotReload">
      <add-to-group group-id="ToolbarRunGroup" anchor="after" relative-to-action="RunnerActions"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl BACK_SLASH"/>
    </action>

    <!-- run menu actions -->
    <group id="Flutter.MenuActions.Run">
      <separator/>
      <reference ref="Flutter.Toolbar.ReloadAction"/>
      <action id="Flutter.Toolbar.RestartAction" class="io.flutter.actions.RestartFlutterAppRetarget"
              description="Restart"
              icon="FlutterIcons.HotRestart">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift BACK_SLASH"/>
      </action>
      <action id="Flutter.Toolbar.ReloadAllAction" class="io.flutter.actions.ReloadAllFlutterAppsRetarget"
              description="Reload All Devices"
              icon="FlutterIcons.HotReload">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt BACK_SLASH"/>
      </action>
      <action id="Flutter.Toolbar.RestartAllAction" class="io.flutter.actions.RestartAllFlutterAppsRetarget"
              description="Restart All Devices"
              icon="FlutterIcons.HotRestart">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift BACK_SLASH"/>
      </action>
      <separator/>
      <action id="Flutter.Menu.RunProfileAction" class="io.flutter.actions.RunProfileFlutterApp"
              description="Flutter Run Profile Mode"
              icon="AllIcons.Actions.Execute">
      </action>
      <action id="Flutter.Menu.RunReleaseAction" class="io.flutter.actions.RunReleaseFlutterApp"
              description="Flutter Run Release Mode"
              icon="AllIcons.Actions.Execute">
      </action>
      <reference ref="AttachDebuggerAction"/>
      <separator/>
      <add-to-group group-id="RunMenu" anchor="after" relative-to-action="Stop"/>
    </group>

    <!-- refactoring menu -->
    <action class="io.flutter.actions.ExtractWidgetAction" id="Flutter.ExtractWidget" text="Extract Flutter Widget...">
      <add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt W"/>
    </action>

    <!-- help menu -->
    <action class="io.flutter.actions.FlutterGettingStartedAction" id="Flutter.FlutterHelp" text="Flutter Plugin Help">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="HelpTopics"/>
    </action>

    <action id="io.flutter.RestartDaemon" class="io.flutter.actions.RestartFlutterDaemonAction"
            text="Restart Flutter Daemon" description="Restart Flutter Daemon" icon="FlutterIcons.Flutter">
    </action>

    <action id="io.flutter.OpenDevToolsAction" class="io.flutter.run.OpenDevToolsAction"
            text="Open DevTools" description="Open Dart DevTools" icon="FlutterIcons.Dart_16">
    </action>
  </actions>

  <extensionPoints>
    <extensionPoint name="gradleSyncProvider" interface="io.flutter.android.GradleSyncProvider"/>
    <extensionPoint name="colorPickerProvider" interface="io.flutter.editor.ColorPickerProvider"/>
  </extensionPoints>


  <extensions defaultExtensionNs="io.flutter">
    <gradleSyncProvider implementation="io.flutter.android.IntellijGradleSyncProvider" order="last"/>
    <colorPickerProvider implementation="io.flutter.editor.IntellijColorPickerProvider" order="last"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="io.flutter.ProjectOpenActivity"/>
    <postStartupActivity implementation="io.flutter.FlutterInitializer"/>
    <projectService serviceInterface="io.flutter.run.daemon.DeviceService"
                    serviceImplementation="io.flutter.run.daemon.DeviceService"/>
    <projectService serviceInterface="io.flutter.dart.FlutterDartAnalysisServer"
                    serviceImplementation="io.flutter.dart.FlutterDartAnalysisServer"/>
    <projectService serviceInterface="io.flutter.bazel.WorkspaceCache"
                    serviceImplementation="io.flutter.bazel.WorkspaceCache"/>
    <projectService serviceInterface="io.flutter.logging.FlutterLogPreferences"
                    serviceImplementation="io.flutter.logging.FlutterLogPreferences"/>
    <projectService serviceImplementation="io.flutter.pub.PubRootCache"/>

    <configurationType implementation="io.flutter.run.FlutterRunConfigurationType"/>
    <runConfigurationProducer implementation="io.flutter.run.FlutterRunConfigurationProducer"/>
    <programRunner implementation="io.flutter.run.FlutterRunner"/>

    <configurationType implementation="io.flutter.run.test.FlutterTestConfigType"/>
    <runConfigurationProducer implementation="io.flutter.run.test.FlutterTestConfigProducer"/>
    <programRunner implementation="io.flutter.run.test.FlutterTestRunner"/>
    <runLineMarkerContributor language="Dart" implementationClass="io.flutter.run.test.FlutterTestLineMarkerContributor"/>

    <configurationType implementation="io.flutter.run.bazel.FlutterBazelRunConfigurationType"/>
    <programRunner implementation="io.flutter.run.bazel.BazelRunner"/>

    <configurationType implementation="io.flutter.run.bazelTest.FlutterBazelTestConfigurationType"/>
    <runConfigurationProducer implementation="io.flutter.run.bazelTest.BazelTestConfigProducer"/>
    <runConfigurationProducer implementation="io.flutter.run.bazelTest.BazelWatchTestConfigProducer"/>
    <programRunner implementation="io.flutter.run.bazelTest.BazelTestRunner"/>
    <runLineMarkerContributor language="Dart" implementationClass="io.flutter.run.bazelTest.FlutterBazelTestLineMarkerContributor"/>

    <defaultLiveTemplatesProvider implementation="io.flutter.template.FlutterLiveTemplatesProvider"/>
    <liveTemplateContext implementation="io.flutter.template.DartToplevelTemplateContextType"/>

    <!-- IDEA only -->
    <moduleBuilder builderClass="io.flutter.module.FlutterModuleBuilder"/>

    <!-- Small IDE support (ex: WebStorm) -->
    <directoryProjectGenerator implementation="io.flutter.module.FlutterSmallIDEProjectGenerator"/>

    <projectService serviceImplementation="io.flutter.sdk.FlutterSdkManager"/>
    <projectService serviceImplementation="io.flutter.sdk.AndroidEmulatorManager"/>

    <applicationService serviceInterface="io.flutter.settings.FlutterSettings"
                        serviceImplementation="io.flutter.settings.FlutterSettings"
                        overrides="false"/>

    <console.folding implementation="io.flutter.console.FlutterConsoleFolding"/>
    <console.folding implementation="io.flutter.logging.FlutterConsoleLogFolding"/>

    <projectConfigurable groupId="language" instance="io.flutter.sdk.FlutterSettingsConfigurable"
                         id="flutter.settings" key="flutter.title" bundle="io.flutter.FlutterBundle" nonDefaultProject="true"/>
    <annotator language="Dart" implementationClass="io.flutter.editor.FlutterEditorAnnotator"/>
    <errorHandler implementation="io.flutter.FlutterErrorReportSubmitter"/>

    <toolWindow id="Flutter Outline" anchor="right" icon="FlutterIcons.Flutter_13"
                factoryClass="io.flutter.preview.PreviewViewFactory"/>
    <projectService serviceImplementation="io.flutter.preview.PreviewView" overrides="false"/>

    <toolWindow id="Flutter Inspector" anchor="right" icon="FlutterIcons.Flutter_13"
                factoryClass="io.flutter.view.FlutterViewFactory"/>
    <projectService serviceImplementation="io.flutter.view.FlutterView" overrides="false"/>

    <toolWindow id="Flutter Performance" anchor="right" icon="FlutterIcons.Flutter_13"
                factoryClass="io.flutter.performance.FlutterPerformanceViewFactory"/>
    <projectService serviceImplementation="io.flutter.performance.FlutterPerformanceView" overrides="false"/>

    <projectOpenProcessor id="flutter" implementation="io.flutter.project.FlutterProjectOpenProcessor" order="first"/>

    <localInspection bundle="io.flutter.FlutterBundle" key="outdated.dependencies.inspection.name"
                     groupName="Flutter" enabledByDefault="true" level="WARNING" language="Dart"
                     implementationClass="io.flutter.inspections.FlutterDependencyInspection"/>

    <editorNotificationProvider implementation="io.flutter.editor.FlutterPubspecNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.inspections.SdkConfigurationNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.editor.NativeEditorNotificationProvider"/>
    <editorNotificationProvider implementation="io.flutter.samples.FlutterSampleNotificationProvider"/>

    <projectService serviceInterface="io.flutter.run.FlutterReloadManager"
                    serviceImplementation="io.flutter.run.FlutterReloadManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.editor.FlutterSaveActionsManager"
                    serviceImplementation="io.flutter.editor.FlutterSaveActionsManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.run.FlutterAppManager"
                    serviceImplementation="io.flutter.run.FlutterAppManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.perf.FlutterWidgetPerfManager"
                    serviceImplementation="io.flutter.perf.FlutterWidgetPerfManager"
                    overrides="false"/>

    <projectService serviceInterface="io.flutter.devtools.DevToolsManager"
                    serviceImplementation="io.flutter.devtools.DevToolsManager"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.editor.ActiveEditorsOutlineService"
                    serviceImplementation="io.flutter.editor.ActiveEditorsOutlineService"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.editor.EditorMouseEventService"
                    serviceImplementation="io.flutter.editor.EditorMouseEventService"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.editor.EditorPositionService"
                    serviceImplementation="io.flutter.editor.EditorPositionService"
                    overrides="false"/>
    <projectService serviceInterface="io.flutter.inspector.InspectorGroupManagerService"
                    serviceImplementation="io.flutter.inspector.InspectorGroupManagerService"
                    overrides="false"/>

    <iconProvider implementation="io.flutter.project.FlutterIconProvider" order="first"/>

    <library.type implementation="io.flutter.sdk.FlutterPluginLibraryType"/>

    <projectStructureDetector implementation="io.flutter.project.FlutterProjectStructureDetector"/>
    <colorSettingsPage implementation="io.flutter.logging.FlutterLogColorPage"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/FlutterLogColorSchemeDefault.xml"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/FlutterCodeColorSchemeDefault.xml"/>
    <search.optionContributor implementation="io.flutter.sdk.FlutterSearchableOptionContributor"/>
  </extensions>

  <project-components>
    <component>
      <implementation-class>io.flutter.editor.WidgetIndentsHighlightingPassFactory</implementation-class>
    </component>
  </project-components>

  <!-- Dart Plugin extensions -->
  <extensions defaultExtensionNs="Dart">
    <completionExtension implementation="io.flutter.editor.FlutterCompletionContributor" order="last"/>
  </extensions>

</idea-plugin>
