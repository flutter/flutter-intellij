/*
 * Copyright 2020 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
  maven {
    url 'https://jetbrains.bintray.com/intellij-plugin-service'
  }
  maven {
    url 'https://jetbrains.bintray.com/intellij-third-party-dependencies'
  }
}

apply plugin: 'java'
apply plugin: "org.jetbrains.intellij"

group 'io.flutter'
version flutterPluginVersion

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

intellij {
  // This adds nullability assertions, but also compiles forms.
  instrumentCode = true
  updateSinceUntilBuild = false
  downloadSources false
  localPath "${project.rootDir.absolutePath}/artifacts/$ide"
  plugins "java", "Dart:$dartVersion", "properties", "junit", "Kotlin",
          "gradle", "android", "Groovy", "smali", "IntelliLang"
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
  testCompile "org.powermock:powermock-api-mockito2:2.0.0"
  testCompile "org.powermock:powermock-module-junit4:2.0.0"
  if ("$ide" == 'android-studio') {
    testCompile project(':flutter-studio')
    testRuntime fileTree(dir: "$project.rootDir/artifacts/android-studio/plugins",
                         includes: ["**/*.jar"],
                         excludes: ["**/kotlin-compiler.jar", "**/kotlin-plugin.jar"])
    testRuntime fileTree(dir: "$project.rootDir/artifacts/android-studio/lib",
                         includes: ["*.jar"])
  }
  compileOnly fileTree(dir: "$project.rootDir/lib/jxbrowser",
                       includes: ["*.jar"])
  testCompile fileTree(dir: "$project.rootDir/lib/jxbrowser",
                       includes: ["*.jar"])
}

/* Need to swizzle source and resource paths to match standard or buildPlugin does nothing. */
sourceSets {
  main.java.srcDirs = [
    "src/main/java",
    "gen",
    "third_party/vmServiceDrivers",
    "src/main/resources"
  ]
  // Add main.kotlin.srcDirs if we start using Kotlin in the main plugin.
  main.resources.srcDirs = [
    "src/main/java",
    "src/main/resources",
  ]
  test.java.srcDirs = [
    "gen",
    "src/main/java",
    "testSrc/unit",
    "third_party/vmServiceDrivers"
  ]
  test.resources.srcDirs = [
    "src/main/resources",
    "testData/unit",
    "testSrc/unit"
  ]
}

buildSearchableOptions.enabled = false

check.dependsOn verifyPlugin
