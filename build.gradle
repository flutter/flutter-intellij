/*
 * Copyright 2019 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

buildscript {
  repositories {
    mavenCentral()
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
      url 'https://jetbrains.bintray.com/intellij-plugin-service'
    }
    maven {
      url 'https://jetbrains.bintray.com/intellij-third-party-dependencies'
    }
  }
}

plugins {
  id "org.jetbrains.intellij" version "0.4.18"
}

repositories {
  mavenLocal()
  mavenCentral()
}

// Specify UTF-8 for all compilations so we avoid Windows-1252.
allprojects {
  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }
  tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
  }
}

apply plugin: "org.jetbrains.intellij"

group 'io.flutter'
version flutterPluginVersion

java {
  sourceCompatibility = JavaVersion.toVersion(javaVersion)
  targetCompatibility = JavaVersion.toVersion(javaVersion)
}

intellij {
  pluginName name
  // This adds nullability assertions, but also compiles forms.
  instrumentCode = true
  updateSinceUntilBuild = false
  localPath "${project.rootDir.absolutePath}/artifacts/$ide"
  downloadSources false
  def pluginList = [project(':flutter-idea'), "java", "Dart:$dartVersion", "properties", "junit",
                    "Kotlin", "gradle", "android", "Groovy", "smali", "IntelliLang"]
  if (ide == 'android-studio') {
    pluginList.add(project(':flutter-studio'))
  } else if ("$buildSpec" == '2020.3') {
    pluginList.add("gradle-dsl-impl")
  }
  plugins = pluginList
}

dependencies {
  implementation project('flutter-idea')
  if (ide == 'android-studio') {
    implementation project('flutter-studio')
  }
}

sourceSets {
}

test {
  // Uncomment this line to disable tests on the bots.
  //ignoreFailures true
}

buildSearchableOptions.enabled = false

// See https://github.com/gradle/gradle/issues/9202
// This does not clean sub-projects.
buildPlugin.dependsOn clean

// Need to delete cache so sub-project tests get run.
test.dependsOn clean
